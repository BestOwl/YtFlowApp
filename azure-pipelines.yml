# Universal Windows Platform

# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: 'YtFlow.sln'
  buildPlatform: 'x86|x64|ARM'
  buildConfiguration: 'Release'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'
  keyFile: 'YtFlowApp_StoreKey.pfx'
  NUGET_PACKAGES: $(Pipeline.Workspace)/.nuget/packages
  cleanBuild: false

steps:
- checkout: self
  submodules: recursive

- task: NuGetToolInstaller@1

- task: Cache@2
  condition: eq('$(cleanBuild)', false)
  inputs:
    key: 'nuget | "$(Agent.OS)"'
    restoreKeys: |
      nuget | "$(Agent.OS)"
      nuget
    path: $(NUGET_PACKAGES)
  displayName: Cache NuGet packages

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: DownloadSecureFile@1
  name: secureKeyFile
  inputs:
    secureFile: '$(keyFile)'
    retryCount: '2'

- task: VSBuild@1
  displayName: Build (16299+)
  inputs:
    solution: '$(solution)'
    platform: x86
    configuration: '$(buildConfiguration)'
    clean: true
    msbuildArgs: '/p:UseSubFolderForOutputDirDuringMultiPlatformBuild=false /p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:PackageCertificateKeyFile="$(secureKeyFile.secureFilePath)" /p:PackageCertificateThumbprint="" /p:UapAppxPackageBuildMode=SideloadOnly /p:PlatformToolset=v142 /restore'

- task: VSBuild@1
  displayName: Build (15063,ARM)
  inputs:
    solution: '$(solution)'
    platform: x86
    configuration: '$(buildConfiguration)'
    clean: true
    msbuildArgs: '/p:AppxBundlePlatforms="ARM" /p:WindowsTargetPlatformVersion=10.0.15063.0 /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Never /p:PackageCertificateKeyFile="$(secureKeyFile.secureFilePath)" /p:PackageCertificateThumbprint="" /p:UapAppxPackageBuildMode=SideloadOnly /p:PlatformToolset=v142 /restore'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(build.artifactStagingDirectory)\AppxPackages\'
    artifact: 'AppxPackages'
    publishLocation: 'pipeline'
